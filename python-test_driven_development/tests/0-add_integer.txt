Testing the `add_integer` function in Python

Import the `add_integer` function from the `0-add_integer` module and test it with some example inputs.
.. code-block:: python

    from add_integer import add_integer

    add_integer = __import__('0-add_integer').add_integer
    >>> print(add_integer(1, 2))
    3

    >>> print(add_integer(100, -2))
    98

    >>> print(add_integer(2.2, 4))
    6

    >>> print(add_integer(2.2))
    100

    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

    >>> add_integer(None, 66)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(2, "Hello")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2147483647, 1)  # Maximum positive integer
    2147483648

    >>> add_integer(-2147483648, 1)  # Minimum negative integer
    -2147483647

    >>> add_integer(0, 0)
    0

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(3, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer